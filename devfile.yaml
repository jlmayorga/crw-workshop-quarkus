apiVersion: 1.0.0
metadata:
  name: user1-quarkus
projects:
  - name: user1-quarkus
    source:
      location: 'https://github.com/jlmayorga/crw-workshop-quarkus.git'
      type: git
components:
  - id: redhat/quarkus-java11/latest
    type: chePlugin
  - mountSources: true
    endpoints:
      - name: quarkus-development-server
        port: 8080
      - attributes:
          path: /hello
        name: hello-greeting-endpoint
        port: 8080
      - attributes:
          public: 'false'
        name: debug
        port: 5005
      - attributes:
          public: 'false'
        name: tests
        port: 8081
    memoryLimit: 1Gi
    type: dockerimage
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
    alias: maven
    image: 'registry.redhat.io/codeready-workspaces/plugin-java11-rhel8@sha256:f90e09397caa4dd5cd3476e495adfc0096272c0ba746a6e32215175c541ae058'
    env:
      - value: '-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss'
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
  - id: redhat/vscode-xml/latest
    type: chePlugin
  - id: redhat/java/latest
    type: chePlugin
  - id: redhat/vscode-openshift-connector/latest
    type: chePlugin
commands:
  - name: 1. Package the application
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: 'mvn package -f ${CHE_PROJECTS_ROOT}/user1-quarkus'
        component: maven
  - name: 2. Start Quarkus in devmode (hot deploy + debug)
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: 'mvn compile quarkus:dev -Dquarkus.http.host=0.0.0.0 -Dquarkus.live-reload.instrumentation=false -f ${CHE_PROJECTS_ROOT}/user1-quarkus'
        component: maven
  - name: 3. Login to OpenShift
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: 'oc login ${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT} --username ${CHE_WORKSPACE_NAMESPACE} --password openshift --insecure-skip-tls-verify=true'
        component: maven
  - name: 4. Build Container Image
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: 'mvn clean package -Dquarkus.container-image.build=true -Dquarkus.kubernetes-client.trust-certs=true'
        component: maven
  - name: Attach remote debugger
    actions:
      - referenceContent: |
          {
            "version": "0.2.0",
            "configurations": [
              {
                "type": "java",
                "request": "attach",
                "name": "Attach to Remote Quarkus App",
                "hostName": "localhost",
                "port": 5005
              }
            ]
          }
        type: vscode-launch
