apiVersion: 1.0.0
metadata:
  generateName: crw-workshop-quarkus-
projects:
  - name: code-with-quarkus
    source:
      location: 'https://github.com/jlmayorga/crw-workshop-quarkus.git'
      type: git
components:
  - id: redhat/quarkus-java11/latest
    type: chePlugin
  - mountSources: true
    endpoints:
      - name: quarkus-development-server
        port: 8080
      - attributes:
          path: /hello
        name: hello-greeting-endpoint
        port: 8080
      - attributes:
          public: 'false'
        name: debug
        port: 5005
      - attributes:
          public: 'false'
        name: tests
        port: 8081
    memoryLimit: 4Gi
    cpuLimit: 1500m
    type: dockerimage
    alias: maven
    image: 'quay.io/openshiftlabs/quarkus-workshop-stack:2.7'
    env:
      - value: /home/jboss/.m2
        name: MAVEN_CONFIG
      - value: '-Xmx4G -Xss128M -XX:MetaspaceSize=1G -XX:MaxMetaspaceSize=2G -XX:+CMSClassUnloadingEnabled'
        name: MAVEN_OPTS
  - id: redhat/vscode-xml/latest
    type: chePlugin
  - id: redhat/java/latest
    type: chePlugin
  - id: redhat/vscode-openshift-connector/latest
    type: chePlugin
commands:
  - name: 1. Package the application
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: 'mvn package -DskipTests -f ${CHE_PROJECTS_ROOT}/code-with-quarkus'
        component: maven
  - name: 2. Start Quarkus in devmode (hot deploy + debug)
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: 'mvn compile quarkus:dev -Dquarkus.http.host=0.0.0.0 -Dquarkus.live-reload.instrumentation=false -f ${CHE_PROJECTS_ROOT}/code-with-quarkus'
        component: maven
  - name: 3. Build Native App
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: 'mvn package -Pnative -DskipTests -f ${CHE_PROJECTS_ROOT}/code-with-quarkus'
        component: maven
  - name: 4. Login to OpenShift
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: 'oc login https://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT} --username ${CHE_WORKSPACE_NAMESPACE} --password openshift --insecure-skip-tls-verify=true'
        component: maven
  - name: 5. Build Container Image
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: 'mvn clean package -Dquarkus.container-image.build=true -Dquarkus.kubernetes-client.trust-certs=true -f ${CHE_PROJECTS_ROOT}/code-with-quarkus'
        component: maven
  - name: 6. Create Project and Deploy
    actions:
      - workdir: '${CHE_PROJECTS_ROOT}'
        type: exec
        command: |
          oc new-project ${CHE_WORKSPACE_NAMESPACE}-test
          oc new-app --namespace ${CHE_WORKSPACE_NAMESPACE}-test --name code-with-quarkus

        component: maven
  - name: Attach remote debugger
    actions:
      - referenceContent: |
          {
            "version": "0.2.0",
            "configurations": [
              {
                "type": "java",
                "request": "attach",
                "name": "Attach to Remote Quarkus App",
                "hostName": "localhost",
                "port": 5005
              }
            ]
          }
        type: vscode-launch
